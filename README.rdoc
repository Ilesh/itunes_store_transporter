= iTunes::Store::Transporter

{<img src="https://secure.travis-ci.org/sshaw/itunes_store_transporter.png"/>}[http://travis-ci.org/sshaw/itunes_store_transporter]
{<img src="https://codeclimate.com/github/sshaw/itunes_store_transporter.png" />}[https://codeclimate.com/github/sshaw/itunes_store_transporter]

Upload and manage your assets in the iTunes Store using the iTunes Store's Transporter (+iTMSTransporter+).

=== Overview

 require "itunes/store/transporter"

 itms = iTunes::Store::Transporter.new(:username => "CouchCaster",
                                       :shortname => "bigtimer",
                                       :password => "w3c@llYoU!")

 itms.upload("/path/to/yourpackage.itmsp")
 metadata = itms.lookup(:apple_id => "yourpackage")

 begin
   itms.verify("/path/to/package2.itmsp", :verify_asssets => false)
 rescue iTunes::Store::Transporter::ExecutionError => e
   puts "Exited with #{e.exitstatus}"

   e.errors.each do |error|
     puts "#{error.message} - #{error.code}"
     puts "Basically, you have some faulty metadata" if error.missing_data?
   end
 end

=== Description

iTunes::Store::Transporter is a wrapper around Apple's +iTMSTransporter+ program. It currently
supports the following operations:

* Upload packages
* Validate packages
* Retrieve status information
* Lookup package metadata and video assets
* List providers
* Retrieve iTunes metadata schemas

It also includes +itms+, an executable that's sorta like using +iTMSTransporter+ directly except
that it can send email notifications and allows one to set global/per-command defaults via <code>$HOME/.itms</code>.

=== Requirements

* Optout v0.0.2 (<code>gem install optout</code>)
* iTunes Store Transporter (http://www.apple.com/itunes/sellcontent)

=== Running on Windows

On Windows +iTMSTransporter+ is called via the +iTMSTransporter.CMD+ batch file. This file does not handle the
+iTMSTransporter+'s exit status correctly, causing <code>iTunes::Store::Transporter</code> to report everything as a success.

This can be fixed by modifying +iTMSTransporter.CMD+ (note that the following does not mimic the batch file exactly):

  ...

  call iTMSTransporter\iTMSTransporter %*

  REM Add this line:
  set exited=%errorlevel%

  cd %olddir%

  REM Add this line too:
  exit /b %exited%

=== Using itms

<code>itms COMMAND [OPTIONS]</code>

* +COMMAND+ - The command (<code>iTunes::Store::Transporter</code> method) to run
* +OPTIONS+ - These are quivalent to the given +COMMAND+'s options except they must be given in long option format. For example <code>:apple_id => "X123"</code> would be <code>--apple-id=X123</code>. Boolean options can be negated with the <code>--no-</code> prefix.

==== Lookup command

The lookup command differs slightly from the gem by allowing you to download low-quality copies of the assets associated with the looked up metadata.
These assets are created by Apple (at the time of this writing, Apple only allows you to download full and preview assets, there is nothing
in +itms+ that would prevent you from downloading other types of assets if/when they're supported).

For example, to lookup the metadata for package +X123+ and download low-quality copies of all the assets:

  itms lookup --vendor-id=X123 --assets

To download a particular asset type just provide its name:
  
  itms lookup --vendor-id=X123 --assets=preview

If there are multiple territories this will download the preview assets for each of them. To only download assets in a given territory or territories use:

  itms lookup --vendor-id=X123 --assets=preview:US
  itms lookup --vendor-id=X123 --assets=preview:US:BR

If necessary multiple asset types can be seperated by a comma:

  itms lookup --vendor-id=X123 --assets=full,preview
  itms lookup --vendor-id=X123 --assets=full,preview:MX

==== Config file

Default options and email notifications can be placed in a YAML file at <code>$HOME/.itms</code>. To skip loading the config file use the <code>--no-config</code> option.

    # Global command defaults
    path: /usr/bin
    username: sshaw
    password: Pa55W0rd!

    # Global email defaults
    email:
      to: everyone@example.com
      from: no-reply@example.com
      host: smtp.example.com

    # Verify command
    verify:
      shortname: lUzer

    # Upload command
    upload:
      shortname: enc0d3rz
      transport: Aspera
      rate: 750000
      # Email notifications for the upload command
      email:
        success:
          cc: assets@example.com
          subject: iTunes Upload <%= @apple_id %>
          message: |
            <%= @username %> uploaded it using <%= @transport %>

            Bye!
        failure:
          to: support@example.com
          subject: Upload Failed!
          message: |
            Here's the problem:

            <%= @error %>

            Fix it!

As you can see, command options are turned into template variables.

=== More Info

* Docs: http://ruby-doc.org/gems/docs/i/itunes_store_transporter-0.1.0/README_rdoc.html
* Bugs: http://github.com/sshaw/itunes_store_transporter/issues
* Source Code: http://github.com/sshaw/itunes_store_transporter
* Web Based GUI: http://github.com/sshaw/itunes_store_transporter_web

=== Author

Skye Shaw [sshaw AT gmail.com]

=== License

Released under the MIT License: http://www.opensource.org/licenses/MIT
